package zte.phone.greendao;

import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteStatement;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.Property;
import de.greenrobot.dao.internal.DaoConfig;

import zte.phone.greendao.LendPhoneNote;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table "LendPhoneNoteTable".
*/
public class LendPhoneNoteDao extends AbstractDao<LendPhoneNote, Long> {

    public static final String TABLENAME = "LendPhoneNoteTable";

    /**
     * Properties of entity LendPhoneNote.<br/>
     * Can be used for QueryBuilder and for referencing column names.
    */
    public static class Properties {
        public final static Property Id = new Property(0, Long.class, "id", true, "_id");
        public final static Property Bmob_lend_phone_id = new Property(1, String.class, "bmob_lend_phone_id", false, "BMOB_LEND_PHONE_ID");
        public final static Property Attach_bmob_phone_id = new Property(2, String.class, "attach_bmob_phone_id", false, "ATTACH_BMOB_PHONE_ID");
        public final static Property Lend_phone_name = new Property(3, String.class, "lend_phone_name", false, "LEND_PHONE_NAME");
        public final static Property Lend_phone_time = new Property(4, String.class, "lend_phone_time", false, "LEND_PHONE_TIME");
        public final static Property Lend_phone_photo_url = new Property(5, String.class, "lend_phone_photo_url", false, "LEND_PHONE_PHOTO_URL");
        public final static Property Lend_phone_number = new Property(6, Long.class, "lend_phone_number", false, "LEND_PHONE_NUMBER");
    };


    public LendPhoneNoteDao(DaoConfig config) {
        super(config);
    }
    
    public LendPhoneNoteDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(SQLiteDatabase db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "\"LendPhoneNoteTable\" (" + //
                "\"_id\" INTEGER PRIMARY KEY ," + // 0: id
                "\"BMOB_LEND_PHONE_ID\" TEXT," + // 1: bmob_lend_phone_id
                "\"ATTACH_BMOB_PHONE_ID\" TEXT," + // 2: attach_bmob_phone_id
                "\"LEND_PHONE_NAME\" TEXT," + // 3: lend_phone_name
                "\"LEND_PHONE_TIME\" TEXT," + // 4: lend_phone_time
                "\"LEND_PHONE_PHOTO_URL\" TEXT," + // 5: lend_phone_photo_url
                "\"LEND_PHONE_NUMBER\" INTEGER);"); // 6: lend_phone_number
    }

    /** Drops the underlying database table. */
    public static void dropTable(SQLiteDatabase db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"LendPhoneNoteTable\"";
        db.execSQL(sql);
    }

    /** @inheritdoc */
    @Override
    protected void bindValues(SQLiteStatement stmt, LendPhoneNote entity) {
        stmt.clearBindings();
 
        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
 
        String bmob_lend_phone_id = entity.getBmob_lend_phone_id();
        if (bmob_lend_phone_id != null) {
            stmt.bindString(2, bmob_lend_phone_id);
        }
 
        String attach_bmob_phone_id = entity.getAttach_bmob_phone_id();
        if (attach_bmob_phone_id != null) {
            stmt.bindString(3, attach_bmob_phone_id);
        }
 
        String lend_phone_name = entity.getLend_phone_name();
        if (lend_phone_name != null) {
            stmt.bindString(4, lend_phone_name);
        }
 
        String lend_phone_time = entity.getLend_phone_time();
        if (lend_phone_time != null) {
            stmt.bindString(5, lend_phone_time);
        }
 
        String lend_phone_photo_url = entity.getLend_phone_photo_url();
        if (lend_phone_photo_url != null) {
            stmt.bindString(6, lend_phone_photo_url);
        }
 
        Long lend_phone_number = entity.getLend_phone_number();
        if (lend_phone_number != null) {
            stmt.bindLong(7, lend_phone_number);
        }
    }

    /** @inheritdoc */
    @Override
    public Long readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
    }    

    /** @inheritdoc */
    @Override
    public LendPhoneNote readEntity(Cursor cursor, int offset) {
        LendPhoneNote entity = new LendPhoneNote( //
            cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0), // id
            cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1), // bmob_lend_phone_id
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // attach_bmob_phone_id
            cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3), // lend_phone_name
            cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4), // lend_phone_time
            cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5), // lend_phone_photo_url
            cursor.isNull(offset + 6) ? null : cursor.getLong(offset + 6) // lend_phone_number
        );
        return entity;
    }
     
    /** @inheritdoc */
    @Override
    public void readEntity(Cursor cursor, LendPhoneNote entity, int offset) {
        entity.setId(cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0));
        entity.setBmob_lend_phone_id(cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1));
        entity.setAttach_bmob_phone_id(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setLend_phone_name(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
        entity.setLend_phone_time(cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4));
        entity.setLend_phone_photo_url(cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5));
        entity.setLend_phone_number(cursor.isNull(offset + 6) ? null : cursor.getLong(offset + 6));
     }
    
    /** @inheritdoc */
    @Override
    protected Long updateKeyAfterInsert(LendPhoneNote entity, long rowId) {
        entity.setId(rowId);
        return rowId;
    }
    
    /** @inheritdoc */
    @Override
    public Long getKey(LendPhoneNote entity) {
        if(entity != null) {
            return entity.getId();
        } else {
            return null;
        }
    }

    /** @inheritdoc */
    @Override    
    protected boolean isEntityUpdateable() {
        return true;
    }
    
}
